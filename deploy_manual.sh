#!/bin/bash

# Bel Energy Portal - Manual VPS Deployment
# Execute commands step by step on the VPS

set -e

VPS_IP="203.161.62.94"
VPS_USER="root"
VPS_PASSWORD="UgXlqW29bR5Js6nV47"

echo "🔧 Manual VPS Deployment for Bel Energy Portal"
echo "=============================================="
echo ""
echo "📋 VPS Details:"
echo "   IP: $VPS_IP"
echo "   User: $VPS_USER"
echo "   Domain: bel-energy.bailab.dev"
echo ""
echo "⚠️  IMPORTANT: Execute these commands ONE BY ONE on your VPS"
echo "   Connect first: ssh root@$VPS_IP"
echo ""
echo "=================================================="
echo "📝 COMMANDS TO EXECUTE ON VPS (copy & paste):"
echo "=================================================="
echo ""

echo "# 1. Update system and install basic tools"
echo "apt update && apt upgrade -y"
echo "apt install -y curl wget git htop ufw"
echo ""

echo "# 2. Install Node.js 20"
echo "curl -fsSL https://deb.nodesource.com/setup_20.x | bash -"
echo "apt-get install -y nodejs"
echo "npm install -g pm2"
echo ""

echo "# 3. Install and configure PostgreSQL"
echo "apt install -y postgresql postgresql-contrib"
echo "systemctl start postgresql"
echo "systemctl enable postgresql"
echo ""
echo "# Create database and user"
echo "sudo -u postgres psql -c \"CREATE DATABASE belenergy_prod;\""
echo "sudo -u postgres psql -c \"CREATE USER belenergy_prod WITH PASSWORD 'belenergy_prod_2024';\""
echo "sudo -u postgres psql -c \"GRANT ALL PRIVILEGES ON DATABASE belenergy_prod TO belenergy_prod;\""
echo ""

echo "# 4. Install and configure Nginx"
echo "apt install -y nginx"
echo "systemctl start nginx"
echo "systemctl enable nginx"
echo ""
echo "# Configure firewall"
echo "ufw allow ssh"
echo "ufw allow 'Nginx Full'"
echo "ufw --force enable"
echo ""

echo "# 5. Clone repository and setup application"
echo "cd /root"
echo "git clone https://github.com/rubenbolivar/bailab.dev-bel-energy.git bel-energy-portal"
echo "cd bel-energy-portal"
echo "npm install"
echo ""

echo "# 6. Configure environment files"
echo "cp packages/database/.env.example packages/database/.env"
echo "cat > packages/database/.env << 'EOL'"
echo "DATABASE_URL=\"postgresql://belenergy_prod:belenergy_prod_2024@localhost:5432/belenergy_prod\""
echo "REDIS_URL=\"redis://localhost:6379\""
echo "EOL"
echo ""
echo "cp apps/api/.env.example apps/api/.env"
echo "cat > apps/api/.env << 'EOL'"
echo "NODE_ENV=production"
echo "PORT=3001"
echo "DATABASE_URL=\"postgresql://belenergy_prod:belenergy_prod_2024@localhost:5432/belenergy_prod\""
echo "JWT_SECRET=\"bel-energy-jwt-secret-prod-$(openssl rand -hex 32)\""
echo "JWT_EXPIRE=\"7d\""
echo "FRONTEND_URL=\"https://bel-energy.bailab.dev\""
echo "EOL"
echo ""
echo "cp apps/web/.env.local.example apps/web/.env.local 2>/dev/null || true"
echo "cat > apps/web/.env.local << 'EOL'"
echo "NEXT_PUBLIC_API_URL=https://bel-energy.bailab.dev/api"
echo "NEXT_PUBLIC_APP_URL=https://bel-energy.bailab.dev"
echo "NODE_ENV=production"
echo "EOL"
echo ""

echo "# 7. Setup database"
echo "npx prisma generate"
echo "cd packages/database"
echo "npm run db:push"
echo "npm run db:seed"
echo "cd ../.."
echo ""

echo "# 8. Build applications"
echo "npm run build"
echo ""

echo "# 9. Configure PM2"
echo "cat > ecosystem.config.js << 'EOL'"
echo "module.exports = {"
echo "  apps: ["
echo "    {"
echo "      name: 'bel-energy-api',"
echo "      script: 'apps/api/src/server.ts',"
echo "      instances: 1,"
echo "      exec_mode: 'fork',"
echo "      env: {"
echo "        NODE_ENV: 'production',"
echo "        PORT: 3001"
echo "      }"
echo "    },"
echo "    {"
echo "      name: 'bel-energy-web',"
echo "      script: 'npm run start',"
echo "      instances: 1,"
echo "      exec_mode: 'fork',"
echo "      cwd: 'apps/web',"
echo "      env: {"
echo "        NODE_ENV: 'production'"
echo "      }"
echo "    }"
echo "  ]"
echo "}"
echo "EOL"
echo ""
echo "pm2 start ecosystem.config.js"
echo "pm2 save"
echo "pm2 startup"
echo ""

echo "# 10. Configure Nginx"
echo "cat > /etc/nginx/sites-available/bel-energy.bailab.dev << 'EOL'"
echo "server {"
echo "    listen 80;"
echo "    server_name bel-energy.bailab.dev;"
echo ""
echo "    # Security headers"
echo "    add_header X-Frame-Options \"SAMEORIGIN\" always;"
echo "    add_header X-XSS-Protection \"1; mode=block\" always;"
echo "    add_header X-Content-Type-Options \"nosniff\" always;"
echo "    add_header Referrer-Policy \"no-referrer-when-downgrade\" always;"
echo "    add_header Content-Security-Policy \"default-src 'self' http: https: data: blob: 'unsafe-inline'\" always;"
echo ""
echo "    # Frontend (Next.js)"
echo "    location / {"
echo "        proxy_pass http://localhost:3000;"
echo "        proxy_http_version 1.1;"
echo "        proxy_set_header Upgrade \$http_upgrade;"
echo "        proxy_set_header Connection 'upgrade';"
echo "        proxy_set_header Host \$host;"
echo "        proxy_set_header X-Real-IP \$remote_addr;"
echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
echo "        proxy_set_header X-Forwarded-Proto \$scheme;"
echo "        proxy_cache_bypass \$http_upgrade;"
echo "    }"
echo ""
echo "    # API"
echo "    location /api {"
echo "        proxy_pass http://localhost:3001;"
echo "        proxy_http_version 1.1;"
echo "        proxy_set_header Upgrade \$http_upgrade;"
echo "        proxy_set_header Connection 'upgrade';"
echo "        proxy_set_header Host \$host;"
echo "        proxy_set_header X-Real-IP \$remote_addr;"
echo "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;"
echo "        proxy_set_header X-Forwarded-Proto \$scheme;"
echo "        proxy_cache_bypass \$http_upgrade;"
echo "    }"
echo ""
echo "    # Static files caching"
echo "    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {"
echo "        expires 1y;"
echo "        add_header Cache-Control \"public, immutable\";"
echo "    }"
echo ""
echo "    # Gzip compression"
echo "    gzip on;"
echo "    gzip_vary on;"
echo "    gzip_min_length 1024;"
echo "    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;"
echo "}"
echo "EOL"
echo ""
echo "# Enable site"
echo "ln -sf /etc/nginx/sites-available/bel-energy.bailab.dev /etc/nginx/sites-enabled/"
echo "rm -f /etc/nginx/sites-enabled/default"
echo "nginx -t"
echo "systemctl reload nginx"
echo ""

echo "# 11. Install SSL certificate"
echo "apt install -y certbot python3-certbot-nginx"
echo "certbot --nginx -d bel-energy.bailab.dev --non-interactive --agree-tos --email admin@bailab.dev"
echo "systemctl enable certbot.timer"
echo ""

echo "# 12. Final verification"
echo "pm2 status"
echo "systemctl status nginx --no-pager -l"
echo "curl -I https://bel-energy.bailab.dev"
echo "curl https://bel-energy.bailab.dev/api/health"
echo ""

echo "=================================================="
echo "🎉 DEPLOYMENT COMPLETE!"
echo "=================================================="
echo ""
echo "🌐 Access URLs:"
echo "   Frontend: https://bel-energy.bailab.dev"
echo "   API: https://bel-energy.bailab.dev/api"
echo "   Health: https://bel-energy.bailab.dev/api/health"
echo ""
echo "🔧 Management:"
echo "   PM2: pm2 status / pm2 logs"
echo "   Nginx: systemctl status nginx"
echo "   Database: sudo -u postgres psql -d belenergy_prod"
echo ""
echo "📝 Next Steps:"
echo "   1. Configure DNS for bel-energy.bailab.dev"
echo "   2. Test all functionality"
echo "   3. Set up monitoring and backups"